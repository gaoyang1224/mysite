同学遇到的问题：
1、pytest 会自动关闭浏览器
2、百度输入内容之后断言标题是成功的

1、不管有没有自动关闭，都手工执行 driver.quit() 关闭浏览器
2、没有等待。断言之前加一个 time.sleep(2)


绝对路径：从根目录开始，root
相对路径：在一个路径下，另外的路径以这个路径做为参照。

所以相对路径和绝对路径都是可以找到你要的文件或者html 元素。

一般不要用绝对路径，要用相对路径查找元素。

为什么？
- 前端工程师：改页面效果，加一个特效。加几个 div
- 绝对路径太长了。不便于维护
- 相对路径。

绝对路径：/html/body/
相对路径：//

填写 xpath: f12, 点级 elememt 选项，ctrl + f

xpath 语法：//input[@name="q"]
抽象后的语法：//标签名[@属性名="属性值"]


使用xpath 查找元素原则：哪个特征最明显，你就用哪一个。
组合条件：
id name class_name
//input[@name="q" and @type="text" and @size="12"]

元素的 id 是唯一的：在同一个页面当中，不可能存在两个元素的 id 相等。

子代元素：//div[@id="anony-nav"]/div[@class="anony-srh"]
子孙代元素：//div[@id="anony-nav"]//div[@class="anony-srh"]

通过儿子找父亲：//div[@class="anony-srh"]/../../..


xpath 用法：
1、//input[@name=""]
2、and 组合属性
3、//div/input 单斜杠通过父亲找儿子
4、//div//input 通过祖先找子孙
5、.. 儿子找父亲
6、//a[text()="豆瓣读书"] ，通过文本
    - text() 不用 @，因为他不是属性
7、text() 经常和 contains 组合使用。 //a[contains(text(), '豆瓣读书')]
//a[contains(@class, 'anony')]

8、索引有两个注意事项：1、加括号，2、索引从 1 开始
9、following-sibling, preceding-sibling, ancestor
a//ancestor::div[@id="anony-nav"] 表示a元素的祖先div 元素

10、*


轴：你想通过一个元素找到另一个元素
称呼：关系：//*[@class="account-form-3rd-hd"]//following-sibling::div



css 选择器


八大元素定位，到底用哪个？
- id
- name
- class
- xpath
- css
- link
- partial
- tagname

元素属性是会动态变化的。
1、属性中间如果有数字
2、owpfwpfeklsfowefosfs

xpath --> css

等待 3 种方式
1、强制等待，硬性等待，time.sleep()，暂停代码运行。
2、智能等待，隐性等待， 全局只需要设置一次
3、显性等待，条件。


1、xpath 和 css 选择器各有什么优势
css 写法更简洁
css 速度更快
css 不支持文本定位
xpath 功能更强
对于复杂定位反而更简洁




